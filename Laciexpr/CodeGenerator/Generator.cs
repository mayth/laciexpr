using System;
using System.Collections.Generic;
using System.Linq;

namespace Laciexpr
{
    public class Generator
    {
        public static string Generate(IEnumerable<Code> codes, int stackSize)
        {
            var builder = new System.Text.StringBuilder();
            builder.AppendLine("/*** Generated by Laciexpr Code Generator ***/");
            builder.AppendLine("#include <stdio.h>");
            builder.AppendLine("int stack[" + stackSize + "];");
            builder.AppendLine("int main() {");
            builder.AppendLine("  int sp = 0;");
            foreach (var code in codes)
            {
                switch(code.OpCode)
                {
                    case OpCode.Push:
                        builder.AppendLine("  stack[sp++] = " + code.Operand + ";");
                        break;
                    case OpCode.Add:
                        builder.AppendLine("  --sp; stack[sp-1] += stack[sp];");
                        break;
                    case OpCode.Sub:
                        builder.AppendLine("  --sp; stack[sp-1] -= stack[sp];");
                        break;
                    case OpCode.Mul:
                        builder.AppendLine("  --sp; stack[sp-1] *= stack[sp];");
                        break;
                    case OpCode.Div:
                        builder.AppendLine("  --sp; stack[sp-1] /= stack[sp];");
                        break;
                    case OpCode.Pos:
                        break;
                    case OpCode.Neg:
                        builder.AppendLine("  stack[sp] = -stack[sp];");
                        break;
                    case OpCode.Print:
                        builder.AppendLine("  printf(\"%d\\n\", stack[--sp]);");
                        break;
                }
            }
            builder.AppendLine("  return 0;");
            builder.AppendLine("}");
            return builder.ToString();
        }
    }
}

